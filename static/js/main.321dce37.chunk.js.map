{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["Button","styled","button","App","input","useState","name","items","setItems","itemName","setItemName","onSubmit","event","preventDefault","type","value","onChange","e","target","map","item","onClick","del_name","alert","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAGMA,EAASC,IAAOC,OAAV,sDA+CIC,GA3CFF,IAAOG,MAAV,0EAKA,WAET,MAA0BC,mBAAS,CAAC,CAACC,KAAM,aAA3C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCH,mBAAS,IAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAiBA,OACE,qCACA,4CACE,uBAAMC,SAlBM,SAAAC,GACdA,EAAMC,iBACNL,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAACD,KAAMG,MAC3BC,EAAY,KAeV,UACE,gCACE,uBAAOJ,KAAK,OAAOQ,KAAK,OAAOC,MAAON,EAAUO,SATpC,SAACC,GACnBP,EAAYO,EAAEC,OAAOH,YAUjB,cAACf,EAAD,CAAQc,KAAK,SAAb,yBAEF,6BACGP,EAAMY,KAAI,SAAAC,GAAI,OACb,oBAAIC,QAAS,kBApBDC,EAoBgBF,EAAKd,KAnBvCiB,MAAM,qBAAsBD,QAC5Bd,EAASD,EAAMiB,QAAO,SAAAJ,GAAI,OAAIA,EAAKd,OAASgB,MAF3B,IAACA,GAoBZ,SAAyCF,EAAKd,iBC/BzCmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.321dce37.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport styled from 'styled-components';\n\nconst Button = styled.button `\n  border: solid 4px red;\n`\n\nconst Input = styled.input `\n  border: teal 4px dotted;\n  width: 600px\n\n`\nconst App =() => {\n\n  const [items, setItems] = useState([{name: \"Wake Up\" }]);\n  const [itemName, setItemName] = useState(\"\");\n\n  const addItem = event => {\n    event.preventDefault();\n    setItems([...items, {name: itemName}]);\n    setItemName(\"\");\n  };\n\n  const deleteItem = (del_name) =>{\n    alert(\"You have deleted: \"+ del_name);\n    setItems(items.filter(item => item.name !== del_name));\n  }\n\n  const updateInput = (e) =>{\n    setItemName(e.target.value)\n  }\n\n  return(\n    <>\n    <h2>To Do List</h2>\n      <form onSubmit={addItem}>\n        <label>\n          <input name=\"item\" type=\"text\" value={itemName} onChange={updateInput} />\n        </label>\n        <Button type=\"submit\">add task</Button>\n      </form>\n      <ul>\n        {items.map(item => (\n          <li onClick={()=>deleteItem(item.name)}>{item.name}</li>\n        ))}\n      </ul>\n    </>\n  )\n}\n\n export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}